/*===--------------------------------------------------------
	token(name,	value, first_set, string_name)
--------------------------------------------------------===*/
native(0,			0,	0,				0)
token(TK_CONST,		1,	fsv_qual,		"const")
token(TK_VOLATILE,	2,	fsv_qual,		"volatile")
token(TK_VOID,		3,	fsv_base,		"void")
token(TK_CHAR,		4,	fsv_base,		"char")
token(TK_SHORT,		5,	fsv_base,		"short")
token(TK_INT,		6,	fsv_base,		"int")
token(TK_LONG,		7,	fsv_base,		"long")
token(TK_SIGNED,	8,	fsv_base,		"signed")
token(TK_UNSIGNED,	9,	fsv_base,		"unsigned")
token(TK_FLOAT,		10,	fsv_base,		"float")
token(TK_DOUBLE,	11,	fsv_base,		"double")
token(TK_STRUCT,	12, fsv_base,		"struct")
token(TK_UNION,		13, fsv_base,		"union")
token(TK_ENUM,		14, fsv_base,		"enum")
token(TK_TYPE,		15,	fsv_base,		"typedef name")
token(TK_TYPEDEF,	16, fsv_scls,		"tpedef")
token(TK_EXTERN,	17, fsv_scls,		"extern")
token(TK_STATIC,	18, fsv_scls,		"static")
token(TK_AUTO,		19, fsv_scls,		"auto")
token(TK_REGISTER,	20, fsv_scls,		"register")
token(TK_ID,		21, fsv_id,			"identifier")
token(TK_FCNST,		22, fsv_atom,		"float constant")
token(TK_DCNST,		23,	fsv_atom,		"double constant")
token(TK_ICNST,		24, fsv_atom,		"integer constant")
token(TK_SCNST,		25, fsv_atom,		"string constant")
token(TK_INC,		26, fsv_pre_op,		"++")
token(TK_DEC,		27,	fsv_pre_op,		"--")
token(TK_ARROW,		28,	0,				"->")
token(TK_AND,		29,	0,				"&&")
token(TK_OR,		30,	0,				"||")
token(TK_EQU,		31,	0,				"==")
token(TK_UE,		32,	0,				"!=")
native(0,			33, fsv_unary_op,	"!")
token(TK_SIZEOF,	34, fsv_pre_op,		"sizeof")
native(0,			35,	0,				0)				//
native(0,			36,	0,				0)				//
native(0,			37,	0,				0)				//
native(0,			38, 0,				"%")
native(0,			39, 0,				"&")
native(0,			40, fsv_lp,			"(")
native(0,			41, 0,				")")
native(0,			42, fsv_unary_op,	"*")
native(0,			43, fsv_unary_op,	"+")
native(0,			44, 0,				",")
native(0,			45, fsv_unary_op,	"-")
native(0,			46, fsv_unary_op,	".")
native(0,			47, 0,				"/")
token(TK_MUL_ASGN,	48,	fsv_asgn,		"*=")
token(TK_DIV_ASGN,	49,	fsv_asgn,		"/=")
token(TK_MOD_ASGN,	50,	fsv_asgn,		"%=")
token(TK_ADD_ASGN,	51,	fsv_asgn,		"+=")
token(TK_SUB_ASGN,	52,	fsv_asgn,		"-=")
token(TK_RS_ASGN,	53,	fsv_asgn,		">>=")
token(TK_LS_ASGN,	54, fsv_asgn,		"<<=")
token(TK_BAND_ASGN,	55, fsv_asgn,		"&=")
token(TK_BXOR_ASGN,	56, fsv_asgn,		"^=")
token(TK_BIOR_ASGN,	57, fsv_asgn,		"|=")
native(0,			58, 0,				":")
native(0,			59, 0,				";")
native(0,			60, fsv_rel_op,		"<")
native(0,			61, fsv_asgn,		"=")
native(0,			62, fsv_rel_op,		">")
native(0,			63, fsv_base,		"?")
token(TK_GE,		64,	fsv_rel_op,		">=")
token(TK_LE,		65,	fsv_rel_op,		"<=")
token(TK_LS,		66,	0,				"<<")
token(TK_RS,		67,	0,				">>")
token(TK_BREAK,		68, fsv_jmp,		"break")
token(TK_CASE,		69, fsv_lab,		"case")
token(TK_CONTINUE,	70, fsv_jmp,		"continue")
token(TK_DEFAULT,	71, fsv_lab,		"default")
token(TK_DO,		72, fsv_iter,		"do")
token(TK_ELSE,		73, 0,				"else")
native(0,			74,	0,				0)
token(TK_FOR,		75, fsv_iter,		"for")
token(TK_GOTO,		76, fsv_jmp,		"goto")
token(TK_IF,		77, fsv_sel,		"if")
native(0,			78,	0,				0)
token(TK_RETURN,	79, fsv_jmp,		"return")
native(0,			80,	0,				0)	// P
native(0,			81,	0,				0)	// Q
token(TK_SWITCH,	82, fsv_sel,		"switch")
token(TK_WHILE,		83, fsv_iter,		"while")
token(TK_ELPS,		84, 0,				"...")
native(0,			85,	0,				0)
native(0,			86,	0,				0)
native(0,			87,	0,				0)
native(0,			88,	0,				0)
native(0,			89,	0,				0)
native(0,			90,	0,				0)
native(0,			91,	0,				0)
native(0,			92,	0,				0)
native(0,			93,	0,				0)
native(0,			94,	0,				"^")
native(0,			95,	0,				0)
native(0,			96,	0,				0)
native(0,			97,	0,				0)
native(0,			98,	0,				0)
native(0,			99,	0,				0)
native(0,			100,0,				0)
native(0,			101,0,				0)
native(0,			102,0,				0)
native(0,			103,0,				0)
native(0,			104,0,				0)
native(0,			105,0,				0)
native(0,			106,0,				0)
native(0,			107,0,				0)
native(0,			108,0,				0)
native(0,			109,0,				0)
native(0,			110,0,				0)
native(0,			111,0,				0)
native(0,			112,0,				0)
native(0,			113,0,				0)
native(0,			114,0,				0)
native(0,			115,0,				0)
native(0,			116,0,				0)
native(0,			117,0,				0)
native(0,			118,0,				0)
native(0,			119,0,				0)
native(0,			120,0,				0)
native(0,			121,0,				0)
native(0,			122,0,				0)
native(0,			123,0,				"{")
native(0,			124,0,				"|")
native(0,			125,0,				"}")
native(0,			126,fsv_unary_op,	"~")
token(TK_EOF,		127,0,				"end of file")
